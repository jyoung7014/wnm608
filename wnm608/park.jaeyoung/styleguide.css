
/* CSS RESET */

*. *::after, *::before{
	box-sizing: border-box;
}

:root {
	--color-neutral-light:#FFFF;
	--color-neutral-medium:#F4F5F4;
	--color-neutral-dark:#555;

	--color-black: #000;
	--color-white:#fff;


	--header-height:3rem;
	--spacing:1rem;

	--font-serif: Poppins;
	--font-sans:Proxima Nova;
}

.body {
	margin:0;
	font-size:100%;
	font-family:Poppins;
}

.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
	font-family: Poppins;
}

.a {
	color:inherit;
	font-weight:bold;
	text-decoration: none;
}
.a:hover {
	text-decoration: underline;
}





/* LAYOUT CLASSES */

.container{
	max-width:800px;
	margin-right: auto;
	margin-left: auto;
}



.display-flex { display:flex; }
.display-inline-flex { display:inline-flex; }
.display-block { display:block; }
.display-inline-block { display:inline-block; }

.flex-stretch {flex: 1 1 auto; } 
.flex-none {flex: none; }

.flex-align-center { align-items:center; }
.flex-justify-center { justify-content:center; }


/*small Classes*/

.media-image {
	max-width: 100%;
	vertical-align: text-bottom;
}
.hidden{
	display: none;
}




/*COMPONENT CLASSES*/

.nav ul {
	list-style-type: none;
	margin-top:0;
	margin-bottom: 0;
	padding-left: 0;
}




.navbar {
	background-color: var(--color-neutral-dark);
	color: var(--color-white);
	line-height: var(--header-height);
}

	.navbar h1{
		font-size: 1em;
		margin:0;
		font-family: Poppins ;
	}

	.navbar a {
		padding:0 0.5em;
	}


/* CARD */

.card {
	background-color: var(--color-white);
	margin-top:1em;
	margin-bottom: 1em;
	padding: 1em;

	overflow: hidden;
	position: relative;
}
	.card.soft {
		border-radius: 0.5em;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
	}
	.card.hard {
		border-radius: 0.2em;
		border:2px solid var(--color-neutral-medium);
	}
	.card.dark {
		background-color: var(--color-neutral-dark);
		color: var(--color-neutral-light);
	}
	.card.medium {
		background-color: var(--color-neutral-medium);
	}

	.card.flat {
		padding: 0;
	}



	

	.view-window {
		height: 50vh;
		position: relative;
		overflow: hidden;
		background-size: cover;
		background-position: center;
		background-attachment: fixed   ;
	}






/* Forms */

.form-control{
	margin: 1em 0;
}
.form-select>select,
.hotdog input,
.hotdog,
.form-button,
.form-input,
.form-item {
	display: inline-block;
	background-color: transparent;
	border-width: 0;
	font: inherit;
	-webkit-appearance: none;
	color: inherit;
	width: 100%;
	outline:0;

}
.form-input {
	border-bottom: 1px solid var(--color-main-dark);
	padding: 0.5em 1em;
}

.form-input:focus {
	border-bottom-color: var(--color-main-light);
}
.form-label{
	font-size: 0.8em;
	color: var(--color-neutral-medium);
	display: block;
	width: 100%;
}




.form-button {
	background-color: var(--color-neutral-light);
	border-width: 0.2em;
	cursor: pointer;
	text-align: center;
	padding: 0.5em 1em;
}

.form-button:hover{
	text-decoration: none;
}

.form-button: active {
	background-color: var(--color-main-light);
}




.hotdog{
	background-color: var(--color-neutral-light);
	border-radius: 2em;
	padding: 0.5em 1.5em;
	display: flex ;

}
.hotdog .dark{
	background-color: var(--color-neutral-dark);
	color: var(--color-neutral-light);
}
.hotdog .light{
	background-color: var(--color-neutral-white);
	color: var(--color-black);
}



.form-select>select{
	padding: 0.5em 1em;
	background-color: var(--color-neutral-light);
	border-radius: 0.3em;
	cursor: pointer;
}
.form-select {
	position: relative;
}

.form-select:: after {
	content:'â–¾' ;
	font-family: poppins;
	font-size: 1.2em;
	position: absolute;
	top: 50%;
	right: 0.5em;
	transform: translateY(-50%);
	pointer-events: none;
	color: var(--color-neutral-medium);
}





/* Toggle */
.toggle label {
	font-size: 1.3em;
	display: inline-block;
	width: 2em;
	height: 1em;
	border: 0.1em solid var(--color-neutral-light);
	background-color: var(--color-neutral-medium);
	border-radius: 1em;
	position: relative;
}

.toggle label :: after {
	content: '';
	display: inline-block;
	width: 0.8em;
	height: 0.8em;
	border-radius: 1em;
	position: absolute;
	background-color: var(--color-neutral-medium);
	transition: all 0.3s;
}

.toggle input:checked + label :: after {
	transform: translateX(1em);
}

















